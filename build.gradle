plugins {
    id 'java'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '8.0.0'
    id 'org.jetbrains.kotlin.jvm'
}

group = 'com.nextdevv'
version = '2.2.5-release'

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven { url = "https://jitpack.io" }
    maven { url 'https://nexus.scarsz.me/content/groups/public/' }
}

dependencies {
    compileOnly "org.spigotmc:spigot-api:1.21-R0.1-SNAPSHOT"
    compileOnly 'com.gitlab.ruany:LiteBansAPI:0.5.0'
    implementation group: 'org.jetbrains', name: 'annotations', version:'22.0.0'
    implementation group: 'org.projectlombok', name: 'lombok', version:'1.18.22'
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version:'1.18.22'
    compileOnly group: 'io.lettuce', name: 'lettuce-core', version:'6.2.5.RELEASE'
    implementation files("libs/JsonFlow-1.4.2.jar")
    implementation files("libs/CMILib1.5.1.1.jar")
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'org.jooq:joor:0.9.15'
    compileOnly 'com.discordsrv:discordsrv:1.28.0'
}

kotlin {
    jvmToolchain(17)
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

shadowJar {
    archiveBaseName.set("AutoMod")
    archiveAppendix.set("")
    archiveClassifier.set("")
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
